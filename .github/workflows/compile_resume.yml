name: Build and Deploy Resume
on:
  push:
    paths:
      - '**.tex'
      - '**.sty'
      - '**.html'
      - 'assets/**'
      - 'sections/**.tex'
      - '.github/workflows/compile_resume.yml'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      
      # - name: Compile LaTeX resume
      #   uses: xu-cheng/latex-action@v3
      #   with:
      #     root_file: resume.tex
      #     latexmk_shell_escape: true
      #     pre_compile: |
      #       sudo tlmgr update --self
      #       sudo tlmgr install fontawesome || echo "fontawesome already installed"
      #       sudo lmgr install sourcesanspro || echo "sourcesanspro already installed"
      #       sudo lmgr install tcolorbox || echo "tcolorbox already installed"
      
      - name: Install TeX Live
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra

      - name: Install required LaTeX packages
        run: |
          sudo tlmgr init-usertree
          sudo tlmgr update --self || echo "tlmgr self-update failed, continuing anyway"
          sudo tlmgr install fontawesome || echo "fontawesome already installed"
          sudo tlmgr install sourcesanspro || echo "sourcesanspro already installed"
          sudo tlmgr install tcolorbox || echo "tcolorbox already installed"

      - name: Compile LaTeX document
        run: |
          pdflatex -shell-escape resume.tex
          pdflatex -shell-escape resume.tex  # Run twice for references

      - name: Upload compiled PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Resume
          path: resume.pdf
      
      # Setup gitHub pages deployment
      - name: Prepare for GitHub Pages
        run: |
          mkdir -p deploy
          
          # Copy index.html and assets if they exist
          if [ -f "index.html" ]; then
            cp index.html deploy/
            echo "index.html found and copied to deploy directory"
          fi
          
          # Copy assets directory if it exists
          if [ -d "assets" ]; then
            cp -r assets deploy/
            echo "Assets directory found and copied to deploy directory"
          fi
          
          # Copy the PDF
          if [ -f "resume.pdf" ]; then
            cp resume.pdf deploy/
            echo "Resume PDF found and copied to deploy directory"
          else
            echo "Resume PDF not found! Listing current directory:"
            ls -la
            # Create a placeholder file to prevent deployment failure
            echo "Resume compilation failed. Please check the workflow logs." > deploy/compilation-failed.txt
          fi
          
          # Add timestamp to deployment
          echo "Last updated: $(date +'%B %d, %Y')" > deploy/last_updated.txt


      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deploy
          branch: gh-pages
          token: ${{ github.token }}